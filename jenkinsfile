pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['DEV', 'PROD'], description: 'Choix de lenvironnement')
        choice(name: 'CHOICE_TAG', choices: ['@valid', '@invalid', '@Integration', '@Post'], description: 'Tag des tests')
    }

    stages {
        stage('Install Dependencies') {
            agent {
                docker {
                     image 'mcr.microsoft.com/playwright:v1.51.0-noble' 
                    args '-u root:root'
                }
            }
            steps {
                script {
                    sh 'node -v'
                    sh 'npm -v'
                    sh 'npm ci'
                    stash name: 'node_modules', includes: 'node_modules/**'
                }
            }
        }

        stage('Run Tests') {
            agent {
                docker {
                     image 'mcr.microsoft.com/playwright:v1.51.0-noble'
                    args '-u root:root'
                }
            }
            steps {
                script {
                     sh 'npm ci'
                     sh 'npm install --save-dev allure-cucumberjs'
                    def environments = [
                        'integration' : [baseUrl: 'http://int.siteinfos.com/admin/login/?next=/admin/', username: 'testeur_integration', password: 'testeur_qa'],
                        'recette' : [baseUrl: 'http://rec.siteinfos.com/admin/login/?next=/admin/', username: 'testeur_recette', password: 'testeur_qa_3']
                    ]
                    def config = environments[params.ENVIRONMENT]
                    // unstash 'node_modules'
                    sh "npx cucumber-js --format json:reports/cucumber-report.json --tags '${params.CHOICE_TAG}' --world-parameters '{\"env\":\"${params.ENVIRONMENT}\", \"baseUrl\":\"${BASE_URL}\"}'"
                    stash name: 'allure-results', includes: 'allure-results/*'
                }
            }
        }
    }

  post {
        always {
            unstash 'allure-results'
            script {
                allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }
}
